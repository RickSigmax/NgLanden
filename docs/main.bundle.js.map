{"version":3,"sources":["./src/$_lazy_route_resource lazy","./src/app/app-routing.module.ts","./src/app/app.component.css","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/country-dashboard/country-dashboard.component.css","./src/app/country-dashboard/country-dashboard.component.html","./src/app/country-dashboard/country-dashboard.component.ts","./src/app/country-detail/country-detail.component.css","./src/app/country-detail/country-detail.component.html","./src/app/country-detail/country-detail.component.ts","./src/app/country-list/country-list.component.css","./src/app/country-list/country-list.component.html","./src/app/country-list/country-list.component.ts","./src/app/country-search/country-search.component.css","./src/app/country-search/country-search.component.html","./src/app/country-search/country-search.component.ts","./src/app/shared/model/country.model.ts","./src/app/shared/model/region.model.ts","./src/app/shared/services/clock.service.ts","./src/app/shared/services/country.service.ts","./src/app/shared/services/favorite.service.ts","./src/app/shared/services/region.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;;;;;;;;;;ACVyC;AACc;AACqC;AACf;AACM;AAEnF,IAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,YAAY,EAAE,SAAS,EAAE,MAAM,EAAC;IACxD,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,iHAAyB,EAAE;IAC3D,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,kGAAoB,EAAE;IACrD,EAAE,IAAI,EAAE,cAAc,EAAE,SAAS,EAAE,wGAAsB,EAAE;IAC3D;QACE,iBAAiB;QAChB,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,WAAW;KACrC;CACF;AAOD;IAAA;IAAgC,CAAC;IAApB,gBAAgB;QAL5B,uEAAQ,CAAC;YACR,OAAO,EAAE,CAAC,qEAAY,CAAC;YACvB,OAAO,EAAE,CAAE,qEAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAE;SAC1C,CAAC;OAEW,gBAAgB,CAAI;IAAD,uBAAC;CAAA;AAAJ;;;;;;;;ACtB7B,mB;;;;;;;ACAA,qPAAqP,MAAM,MAAM,MAAM,oFAAoF,OAAO,+X;;;;;;;;;;;;;;;;ACAxT;AAO1C;IALA;QAME,UAAK,GAAG,UAAU,CAAC;IACrB,CAAC;IAFY,YAAY;QALxB,wEAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;OACW,YAAY,CAExB;IAAD,mBAAC;CAAA;AAFwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPzB,gBAAgB;AAC0C;AACjB;AACzC,2CAA2C;AACyB;AACX;AACf,CAAK,qBAAqB;AAEpE,mBAAmB;AAC4B;AAC6C;AACT;AACN;AACM;AAEnF,iBAAiB;AAC8C;AACM;AACF;AACF;AAoBjE;IAAA;IAAyB,CAAC;IAAb,SAAS;QAlBrB,uEAAQ,CAAC;YACR,oDAAoD;YACpD,YAAY,EAAE;gBACZ,oEAAY;gBACZ,iHAAyB;gBACzB,wGAAsB;gBACtB,kGAAoB;gBACpB,wGAAsB;aACvB;YACD,0DAA0D;YAC1D,OAAO,EAAE;gBACP,gFAAa,EAAE,8EAAgB,EAAE,6EAAgB,EAAE,gEAAa,CAAC,OAAO,CAAC;oBACvE,MAAM,EAAC,yCAAyC;iBACjD,CAAC;aACH;YACD,SAAS,EAAE,CAAC,yFAAc,EAAC,uFAAa,EAAC,qFAAY,EAAC,2FAAe,CAAC;YACtE,SAAS,EAAE,CAAC,oEAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;ACvCtB,oCAAoC,qBAAqB,4BAA4B,KAAK,0BAA0B,0BAA0B,wBAAwB,yBAAyB,SAAS,6BAA6B,gCAAgC,yBAAyB,qBAAqB,yBAAyB,yBAAyB,kBAAkB,KAAK,kCAAkC,+CAA+C,yBAAyB,KAAK,eAAe,kBAAkB,4BAA4B,sBAAsB,uBAAuB,KAAK,kBAAkB,kBAAkB,sBAAsB,uBAAuB,eAAe,gBAAgB,gCAAgC,KAAK,K;;;;;;;ACA/uB,k1BAAk1B,WAAW,4FAA4F,aAAa,qFAAqF,eAAe,uQAAuQ,WAAW,wEAAwE,aAAa,mEAAmE,eAAe,kcAAkc,yDAAyD,2BAA2B,4IAA4I,KAAK,kD;;;;;;;;;;;;;;;;;;;;;ACAxlE;AAIgB;AACI;AAQtE;IAKE,mCAAoB,aAA4B,EAC5B,eAAgC;QADhC,kBAAa,GAAb,aAAa,CAAe;QAC5B,oBAAe,GAAf,eAAe,CAAiB;QAHpD,cAAS,GAAa,EAAE,CAAC;IAG+B,CAAC;IAEzD,4CAAQ,GAAR;QAAA,iBAeC;QAdC,OAAO,CAAC,GAAG,CAAC,oCAAoC,CAAC;QAEjD,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,CAAC,SAAS,CAAC,oBAAU;YACnD,KAAI,CAAC,OAAO,GAAG,UAAU,CAAC,CAA+C,qBAAqB;QAC/F,CAAC,EACD,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,EAA8C,mBAAmB;QACxF,cAAK,cAAO,CAAC,GAAG,CAAC,6BAA6B,CAAC,EAA1C,CAA0C,CAA4B,sBAAsB;SAC9F,CAAC;QAEF,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,SAAS,CAAC,WAAC;YACtC,YAAI,CAAC,cAAc,CAAC,CAAC,CAAC;QAAtB,CAAsB,EACtB,aAAG,IAAE,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,EAA8C,mBAAmB;QACtF,cAAK,cAAO,CAAC,GAAG,CAAC,0BAA0B,CAAC,EAAvC,CAAuC,CAA6B,sBAAsB;SAChG,CAAC;IACR,CAAC;IAED,kDAAc,GAAd,UAAe,QAAgB;QAE7B,OAAO,CAAC,GAAG,CAAC,2CAA2C,EAAE,QAAQ,CAAC,CAAC;QACnE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAChC,CAAC;IA7BU,yBAAyB;QANrC,wEAAS,CAAC;YACT,QAAQ,EAAE,uBAAuB;;;SAGlC,CAAC;yCAOmC,sFAAa;YACX,0FAAe;OANzC,yBAAyB,CA+BrC;IAAD,gCAAC;CAAA;AA/BqC;;;;;;;;ACbtC,0BAA0B,sBAAsB,MAAM,C;;;;;;;ACAtD,wTAAwT,kBAAkB,uDAAuD,kBAAkB,kCAAkC,6BAA6B,0DAA0D,kBAAkB,uIAAuI,kBAAkB,SAAS,+CAA+C,iBAAiB,sJAAsJ,oGAAoG,oTAAoT,sEAAsE,gBAAgB,6FAA6F,6EAA6E,mBAAmB,cAAc,qEAAqE,iBAAiB,2EAA2E,oBAAoB,wDAAwD,kBAAkB,cAAc,wBAAwB,wPAAwP,iDAAiD,gBAAgB,gBAAgB,kBAAkB,mBAAmB,iEAAiE,eAAe,cAAc,yNAAyN,mR;;;;;;;;;;;;;;;;;;;;;;;;;ACA18E;AACvB;AACY;AACnB;AACP;AACsB;AAEM;AAQtE;IAoBE,gCACU,cAA+B,EAC/B,KAAqB,EACrB,QAAkB,EAClB,YAA0B,EAC1B,eAAgC;QAJhC,mBAAc,GAAd,cAAc,CAAiB;QAC/B,UAAK,GAAL,KAAK,CAAgB;QACrB,aAAQ,GAAR,QAAQ,CAAU;QAClB,iBAAY,GAAZ,YAAY,CAAc;QAC1B,oBAAe,GAAf,eAAe,CAAiB;QAtB1C,eAAU,GAAW,CAAC,CAAC;QACvB,aAAQ,GAAY,KAAK,CAAC;QAG1B,mBAAc,GAAS,IAAI,IAAI,EAAE,CAAC;QAMlC,WAAM,GAAyB,IAAI,mEAAY,EAAU,CAAC;QAG1D,QAAG,GAAwB,IAAI,mEAAY,EAAU,CAAC;QAEtD,eAAU,GAAY,KAAK,CAAC;IAQxB,CAAC;IAEL,yCAAQ,GAAR;QACE,OAAO,CAAC,GAAG,CAAC,iCAAiC,CAAC;QAC9C,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,4CAAW,GAAX,UAAY,MAAM;QAChB,OAAO,CAAC,GAAG,CAAC,4CAA4C,EAAE,MAAM,CAAC,CAAC;QAClE,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;YACjB,IAAI,CAAC,cAAc,EAAE,CAAC;YACtB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC;QAC5C,CAAC;IACF,CAAC;IAEA,4CAAW,GAAX;QACE,OAAO,CAAC,GAAG,CAAC,oCAAoC,CAAC,CAAC;QAClD,IAAI,CAAC,wBAAwB,CAAC,WAAW,EAAE,CAAC;IAC9C,CAAC;IAED,2CAAU,GAAV;QAAA,iBAkBC;QAjBC,OAAO,CAAC,GAAG,CAAC,mCAAmC,CAAC,CAAC;QACjD,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACpD,EAAE,EAAC,CAAC,IAAI,CAAC,CACT,CAAC;YACC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;YACtB,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;QAC3B,CAAC;QACD,IAAI,CACJ,CAAC;YACC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACvB,CAAC;QAED,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,WAAC;YAC9C,KAAI,CAAC,OAAO,GAAG,CAAC,CAAC;YACjB,KAAI,CAAC,cAAc,EAAE,CAAC;QAAC,CAAC,EAA4B,qBAAqB;QACzE,UADoD,qBAAqB;YACzE,GAAG,IAAE,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,EAAyB,mBAAmB;QACjE,cAAK,cAAO,CAAC,GAAG,CAAC,yBAAyB,CAAC,EAAtC,CAAsC,CAAE,CAAC,CAAM,sBAAsB;IAC9E,CAAC;IAED,+CAAc,GAAd;QAEE,OAAO,CAAC,GAAG,CAAC,uCAAuC,CAAC;QACpD,8BAA8B;QAC9B,IAAI,QAAQ,GAAG,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC,QAAQ,EAAE,CAAC;QACvC,IAAI,KAAK,GAAa,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;QACxD,IAAI,CAAC,UAAU,GAAG,QAAQ,GAAC,CAAC,GAAG,KAAK,CAAC;IACvC,CAAC;IAED,wCAAO,GAAP;QAAA,iBAWC;QATC,OAAO,CAAC,GAAG,CAAC,gCAAgC,CAAC;QAC7C,+BAA+B;QAE/B,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC,SAAS,CAAC,WAAC;YAEtE,8BAA8B;YAC9B,CAAC,CAAC,WAAW,CAAC,KAAI,CAAC,UAAU,CAAC,CAAC;YAC/B,KAAI,CAAC,IAAI,GAAE,CAAC,CAAC;QACf,CAAC,CAAC,CAAC;IACL,CAAC;IAGD,uCAAM,GAAN;QACE,OAAO,CAAC,GAAG,CAAC,+BAA+B,CAAC;QAC5C,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;IACvB,CAAC;IAED,qCAAI,GAAJ,UAAK,GAAW;QAEd,OAAO,CAAC,GAAG,CAAC,6BAA6B,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,EAAE,GAAG,CAAE,CAAC;QAC1E,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACxB,CAAC;IAED,yCAAQ,GAAR;QACA,OAAO,CAAC,GAAG,CAAC,gCAAgC,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAE,CAAC;QAChE,IAAI,CAAC,UAAU,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC;QACnC,iCAAiC;QACjC,OAAO,CAAC,GAAG,CAAC,uBAAuB,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QACxD,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IAC1D,CAAC;IAjGA;QADC,oEAAK,EAAE;kCACE,4EAAO,CAAC,yCAAyC;;2DAA1C;IAGjB;QADC,qEAAM,EAAE;kCACD,mEAAY;0DAAsC;IAG1D;QADC,qEAAM,EAAE;kCACJ,mEAAY;uDAAqC;IAhB3C,sBAAsB;QALlC,wEAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;;;SAG/B,CAAC;yCAsB2B,wFAAc;YACxB,uEAAc;YACX,iEAAQ;YACJ,oFAAY;YACT,0FAAe;OAzB/B,sBAAsB,CA6GlC;IAAD,6BAAC;CAAA;AA7GkC;;;;;;;;ACfnC,kCAAkC,wBAAwB,yBAAyB,qBAAqB,KAAK,wBAAwB,wBAAwB,yBAAyB,qBAAqB,KAAK,C;;;;;;;ACAhN,+OAA+O,gEAAgE,kBAAkB,gCAAgC,4BAA4B,wDAAwD,kBAAkB,SAAS,sCAAsC,kBAAkB,SAAS,6CAA6C,iBAAiB,UAAU,4HAA4H,iBAAiB,kQAAkQ,cAAc,KAAK,cAAc,kEAAkE,gBAAgB,QAAQ,kEAAkE,SAAS,mCAAmC,gBAAgB,oEAAoE,WAAW,cAAc,uDAAuD,mBAAmB,SAAS,+FAA+F,SAAS,0Q;;;;;;;;;;;;;;;;;;;;;;;;;ACAh8C;AAEW;AACd;AACY;AACjB;AACP;AAC4B;AAQtE;IASE,8BACU,cAA+B,EAC/B,aAA4B,EAC5B,KAAqB,EACrB,QAAkB,EAClB,eAAgC;QAJhC,mBAAc,GAAd,cAAc,CAAiB;QAC/B,kBAAa,GAAb,aAAa,CAAe;QAC5B,UAAK,GAAL,KAAK,CAAgB;QACrB,aAAQ,GAAR,QAAQ,CAAU;QAClB,oBAAe,GAAf,eAAe,CAAiB;QAX1C,aAAQ,GAAW,gBAAgB,CAAC;IAYhC,CAAC;IAEL,uCAAQ,GAAR;QAAA,iBAIC;QAHC,OAAO,CAAC,GAAG,CAAC,+BAA+B,CAAC;QAC5C,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,SAAS,CAAC,WAAC,IAAG,YAAI,CAAC,WAAW,CAAC,CAAC,CAAC,EAAnB,CAAmB,CAAC,CAAC;IACpE,CAAC;IAED,0CAAW,GAAX,UAAY,IAAY;QACpB,OAAO,CAAC,GAAG,CAAC,qCAAqC,EAAC,IAAI,CAAE;QACxD,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,WAAC;YACpB,EAAE,EAAC,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,EAAC;gBAClB,OAAO,CAAC,GAAG,CAAC,kCAAkC,CAAC,CAAC;gBAChD,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC;YACtB,CAAC;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IAGD,0CAAW,GAAX,UAAY,OAAgB;QAE1B,OAAO,CAAC,GAAG,CAAC,kCAAkC,CAAC;QAC/C,IAAI,CAAC,eAAe,GAAE,OAAO,CAAC;QAC9B,IAAI,CAAC,QAAQ,GAAG,gBAAgB,CAAC;IACnC,CAAC;IAED,wCAAS,GAAT;QAAA,iBAkBC;QAhBC,OAAO,CAAC,GAAG,CAAC,gCAAgC,CAAC;QAC7C,IAAM,EAAE,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACnD,OAAO,CAAC,GAAG,CAAC,cAAc,GAAC,EAAE,CAAC,CAAC;QAC/B,yBAAyB;QACzB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,EAAE,EAAC,EAAE,KAAK,CAAC,CAAC,CACZ,CAAC;YACC,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;YACvB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACxB,CAAC;QAEK,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,WAAC;YAAI,KAAI,CAAC,MAAM,GAAG,CAAC,CAAC;YAC9D,KAAI,CAAC,YAAY,EAAE,CAAC,CAAuB,qBAAqB;QAClE,CAAC,EAAE,aAAG,IAAG,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,EAAoB,mBAAmB;QAChE,cAAI,cAAO,CAAC,GAAG,CAAC,oBAAoB,CAAC,EAAjC,CAAiC,CAAC,CAAC,CAAM,sBAAsB;IAE3E,CAAC;IAED,qCAAM,GAAN;QACE,OAAO,CAAC,GAAG,CAAC,6BAA6B,CAAC;QAC1C,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;IACvB,CAAC;IAED,2CAAY,GAAZ;QAAA,iBAcC;QAZC,OAAO,CAAC,GAAG,CAAC,mCAAmC,CAAC;QAChD,IAAI,CAAC,cAAc,CAAC,eAAe,EAAE,CAAC,SAAS,CAAC,WAAC;YAC/C,KAAI,CAAC,SAAS,GAAG,CAAC,CAAC;YACnB,EAAE,EAAC,KAAI,CAAC,QAAQ,CAAC,CACjB,CAAC;gBACG,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;gBAChC,KAAI,CAAC,SAAS,GAAG,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC,WAAC,IAAE,QAAC,CAAC,MAAM,KAAK,KAAI,CAAC,MAAM,CAAC,IAAI,EAA7B,CAA6B,CAAC,CAAC;YAC7E,CAAC;QACH,CAAC,EAAyD,qBAAqB;QAC/E,UAD0D,qBAAqB;YAC/E,GAAG,IAAE,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,EAA+B,mBAAmB;QACvE,cAAK,cAAO,CAAC,GAAG,CAAC,2BAA2B,CAAC,EAAxC,CAAwC,CAAa,sBAAsB;SACjF,CAAC;IACF,CAAC;IAED,2CAAY,GAAZ,UAAa,MAAc;QACzB,OAAO,CAAC,GAAG,CAAC,mCAAmC,CAAC;QAChD,IAAI,CAAC,eAAe,CAAC,MAAM,IAAI,MAAM,CAAC;IACxC,CAAC;IAhFU;QAAV,oEAAK,EAAE;kCAAY,0EAAM;wDAAC;IALhB,oBAAoB;QALhC,wEAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;;;SAG7B,CAAC;yCAW2B,wFAAc;YAChB,sFAAa;YACrB,uEAAc;YACX,iEAAQ;YACD,0FAAe;OAd/B,oBAAoB,CAuFhC;IAAD,2BAAC;CAAA;AAvFgC;;;;;;;;ACfjC,8BAA8B,qBAAqB,4BAA4B,KAAK,gBAAgB,0BAA0B,qBAAqB,2BAA2B,yBAAyB,6CAA6C,0DAA0D,sBAAsB,0CAA0C,MAAM,MAAM,+BAA+B,KAAK,YAAY,qBAAqB,KAAK,C;;;;;;;ACApc,0EAA0E,sBAAsB,wHAAwH,4PAA4P,6CAA6C,uBAAuB,yJAAyJ,cAAc,mDAAmD,0BAA0B,cAAc,KAAK,gBAAgB,4HAA4H,2HAA2H,sBAAsB,4IAA4I,MAAM,MAAM,gLAAgL,MAAM,MAAM,kCAAkC,MAAM,MAAM,0JAA0J,cAAc,iDAAiD,wBAAwB,cAAc,KAAK,gBAAgB,kR;;;;;;;;;;;;;;;;;;;;;;ACAhqD;AAEV;AAGsC;AAGZ;AAQlE;IAME,gCAAoB,cAA+B;QAA/B,mBAAc,GAAd,cAAc,CAAiB;QAF3C,gBAAW,GAAG,IAAI,6DAAO,EAAU,CAAC;IAEW,CAAC;IAExD,yCAAQ,GAAR;QAAA,iBAOC;QANC,OAAO,CAAC,GAAG,CAAC,iCAAiC,CAAC;QAC9C,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CACrC,oEAAY,CAAC,GAAG,CAAC,EAAiB,gBAAgB;QAClD,4EAAoB,EAAE,EAAY,qCAAqC;QACvE,iEAAS,CAAC,UAAC,IAAW,IAAG,YAAI,CAAC,cAAc,CAAC,aAAa,CAAC,IAAI,CAAC,EAAvC,CAAuC,CAAC,CAAE,gEAAgE;SACpI;IACH,CAAC;IAED,uCAAM,GAAN,UAAO,IAAY;QAEjB,OAAO,CAAC,GAAG,CAAC,kCAAkC,EAAC,IAAI,CAAC,CAAC;QACrD,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC9B,CAAC;IArBU,sBAAsB;QALlC,wEAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;;;SAG/B,CAAC;yCAOqC,wFAAc;OANxC,sBAAsB,CAuBlC;IAAD,6BAAC;CAAA;AAvBkC;;;;;;;;;AChBnC;AAAA;IAII,iBAAmB,IAAY,EACZ,OAAe,EACf,MAAc,EACd,IAAY,EACZ,UAAkB,EAClB,MAAa,EACb,QAAgB,EAChB,GAAW,EACX,GAAW,EACX,OAAe;QATf,SAAI,GAAJ,IAAI,CAAQ;QACZ,YAAO,GAAP,OAAO,CAAQ;QACf,WAAM,GAAN,MAAM,CAAQ;QACd,SAAI,GAAJ,IAAI,CAAQ;QACZ,eAAU,GAAV,UAAU,CAAQ;QAClB,WAAM,GAAN,MAAM,CAAO;QACb,aAAQ,GAAR,QAAQ,CAAQ;QAChB,QAAG,GAAH,GAAG,CAAQ;QACX,QAAG,GAAH,GAAG,CAAQ;QACX,YAAO,GAAP,OAAO,CAAQ;QAZ3B,aAAQ,GAAY,KAAK,CAAC;QAC1B,WAAM,GAAY,CAAC,CAAC;IAY3B,CAAC;IACL,cAAC;AAAD,CAAC;;;;;;;;;;ACfD;AAAA;IACI,gBAAmB,EAAU,EACV,IAAY,EACZ,MAAc,EACd,MAAc;QAHd,OAAE,GAAF,EAAE,CAAQ;QACV,SAAI,GAAJ,IAAI,CAAQ;QACZ,WAAM,GAAN,MAAM,CAAQ;QACd,WAAM,GAAN,MAAM,CAAQ;IACjC,CAAC;IACL,aAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;ACN0C;AACT;AAGlC;IAIE;IAEA,CAAC;IAED,sBAAsB;IACtB,4CAA4C;IAC5C,IAAI;IACJ,wDAAwD;IACxD,kCAAkC;IAClC,6BAA6B;IAC7B,iBAAiB;IACjB,QAAQ;IACR,iBAAiB;IACjB,2EAA2E;IAC3E,wBAAwB;IACxB,IAAI;IAGJ,+BAAQ,GAAR;QAEE,IAAI,CAAC,KAAK,GAAG,gDAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,cAAI,IAAG,WAAI,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC,KAAK,EAAE,CAAC;QACtE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAE;IACrB,CAAC;IA1BU,YAAY;QADxB,yEAAU,EAAE;;OACA,YAAY,CA6BxB;IAAD,mBAAC;CAAA;AA7BwB;;;;;;;;;;;;;;;;;;;;;;;;;ACJkB;AAEH;AACuB;AACV;AACJ;AAGnB;AAG9B;IAIE,wBACU,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAHlB,eAAU,GAAG,kCAAkC,CAAC;IAInD,CAAC;IAEN,wCAAe,GAAf;QAAA,iBAGC;QADE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAY,IAAI,CAAC,UAAU,GAAC,MAAM,CAAC,CAAC,GAAG,CAAC,aAAG,IAAI,YAAI,CAAC,KAAK,CAAC,GAAG,CAAC,EAAf,CAAe,CAAC;IACtF,CAAC;IAED,sCAAa,GAAb,UAAc,IAAY;QAA1B,iBAWC;QAVC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;YACV,+CAA+C;YAC/C,MAAM,CAAC,sEAAE,CAAC,EAAE,CAAC,CAAC;QAChB,CAAC;QACD,IAAI,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC;QACnB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAY,IAAI,CAAC,UAAU,GAAC,QAAQ,GAAC,IAAI,GAAC,cAAc,CAAC,CAAC,IAAI,CAChF,2DAAG,CAAC,WAAC,IAAE,YAAI,CAAC,GAAG,CAAC,2BAA2B,GAAC,IAAI,CAAC,EAA1C,CAA0C,CAAC,EAClD,kEAAU,CAAC,IAAI,CAAC,WAAW,CAAY,eAAe,EAAC,EAAE,CAAC,CAAC,EAC3D,2DAAG,CAAC,aAAG,IAAI,YAAI,CAAC,KAAK,CAAC,GAAG,CAAC,EAAf,CAAe,CAAC,CAC1B,CAAC;IACN,CAAC;IAED,mCAAU,GAAV,UAAW,IAAW;QAAtB,iBAKC;QAHC,IAAM,GAAG,GAAG,IAAI,CAAC,UAAU,GAAC,QAAQ,GAAC,IAAI,GAAC,gBAAgB,CAAC;QAC3D,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACjB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAU,GAAG,CAAC,CAAC,GAAG,CAAC,aAAG,IAAE,YAAI,CAAC,WAAW,CAAC,GAAG,CAAC,EAArB,CAAqB,CAAC,CAAC;IACrE,CAAC;IAED,oCAAW,GAAX,UAAY,KAAU;QAElB,IAAI,SAAS,GAAe,EAAE;QAE9B,KAAK,CAAC,OAAO,CAAC,iBAAO;YAAG,SAAS,CAAC,IAAI,CAAC,IAAI,qEAAO,CAAC,OAAO,CAAC,IAAI,EACb,OAAO,CAAC,OAAO,EACf,OAAO,CAAC,MAAM,EACd,OAAO,CAAC,IAAI,EACZ,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,cAAc,CAAC,OAAO,CAAC,EAClD,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,EACzC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAC7C,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,EAC7C,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,EAC5C,OAAO,CAAE,CAAC,CAAC;QACb,CAAC,CACA,CAAC;QAClD,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;IACxB,CAAC;IAED,8BAAK,GAAL,UAAM,KAAa;QAEf,IAAI,SAAS,GAAe,EAAE;QAC9B,KAAK,CAAC,OAAO,CAAC,iBAAO;YAAG,SAAS,CAAC,IAAI,CACpC,IAAI,qEAAO,CACV,OAAO,CAAC,IAAI,EACZ,OAAO,CAAC,OAAO,EACf,OAAO,CAAC,MAAM,EACd,OAAO,CAAC,IAAI,EACZ,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,cAAc,CAAC,OAAO,CAAC,EAClD,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,EACtD,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAC7C,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,EAC7C,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,EAC5C,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAE,CAAC,CAAC;QAC3C,CAAC,CACA,CAAC;QACJ,MAAM,CAAC,SAAS,CAAC;IACrB,CAAC;IAEO,oCAAW,GAAnB,UAAwB,SAAuB,EAAE,MAAS;QAA1D,iBAOC;QAPuB,mDAAuB;QAE7C,MAAM,CAAC,UAAC,KAAU;YAChB,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YACrB,KAAI,CAAC,GAAG,CAAC,uCAAuC,CAAC,CAAC;YAClD,MAAM,CAAC,sEAAE,CAAC,MAAW,CAAC,CAAC;QACzB,CAAC;IACH,CAAC;IAEO,4BAAG,GAAX,UAAY,OAAe;QACzB,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;IACvB,CAAC;IAnFU,cAAc;QAD1B,yEAAU,EAAE;yCAMK,wEAAU;OALf,cAAc,CAoF1B;IAAD,qBAAC;CAAA;AApF0B;;;;;;;;;;;;;;;;;;;;;ACXgB;AACJ;AAIvC;IAIE;QACE,IAAI,CAAC,SAAS,GAAG,IAAI,6DAAO,EAAU,CAAC;IACzC,CAAC;IANU,eAAe;QAD3B,yEAAU,EAAE;;OACA,eAAe,CAQ3B;IAAD,sBAAC;CAAA;AAR2B;;;;;;;;;;;;;;;;;;;;;;;;;ACLc;AAC1C,qCAAqC;AAC+B;AAInD;AAEa;AACG;AACF;AAG/B;IAEC,uBAAoB,IAAe;QAAf,SAAI,GAAJ,IAAI,CAAW;IAEnC,CAAC;IAED,0BAA0B;IAC1B,kCAAU,GAAV;QACC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAW,6BAA6B,CAAC,CAAC;IAC5D,CAAC;IAEF,0BAA0B;IAC5B,iCAAS,GAAT,UAAU,EAAW;QACpB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAW,6BAA6B,CAAC,CAAC,GAAG,CAAC,YAAE,IAAM,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,WAAC,IAAE,QAAC,CAAC,EAAE,KAAK,EAAE,EAAX,CAAW,CAAC,GAAC,CAAC,CAAC;QAC3G,6FAA6F;QAC7F,iDAAiD;IAC/C,CAAC;IAhBQ,aAAa;QADzB,yEAAU,EAAE;yCAGa,wEAAU;OAFvB,aAAa,CAiBzB;IAAD,oBAAC;CAAA;AAjByB;;;;;;;;;ACb1B;AAAA,mFAAmF;AACnF,8FAA8F;AAC9F,yEAAyE;AACzE,gFAAgF;AAEzE,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;;;;;;;;;;;;;;ACP6C;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,8EAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,+EAAc,EAAE,CAAC;AACnB,CAAC;AAED,yGAAsB,EAAE,CAAC,eAAe,CAAC,kEAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CountryDashboardComponent } from './country-dashboard/country-dashboard.component';\nimport { CountryListComponent } from './country-list/country-list.component';\nimport { CountryDetailComponent } from './country-detail/country-detail.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/dashboard', pathMatch: 'full'},\n  { path: 'dashboard', component: CountryDashboardComponent },\n  { path: 'list/:id', component: CountryListComponent },\n  { path: 'detail/:name', component: CountryDetailComponent },\n  {\n    //catch all route\n     path: '**', redirectTo: 'dashboard'\n  }\n]\n\n@NgModule({\n  exports: [RouterModule],\n  imports: [ RouterModule.forRoot(routes) ]\n})\n\nexport class AppRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app-routing.module.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = ./src/app/app.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container\\\">\\n    <div class = \\\"jumbotron\\\" >   \\n        <table>\\n            <tr>\\n                <td>\\n                        <img src=\\\"../assets/img/angularIcon.png\\\"/>\\n                        <span>&nbsp;&nbsp;&nbsp;&nbsp;</span>\\n                </td>\\n                <td>\\n                        <h1>{{title}}</h1>\\n                        <h2>Angular app made by Rick</h2>\\n                </td>\\n            </tr>\\n        </table>\\n        \\n       \\n    </div>\\n    \\n            <router-outlet></router-outlet>\\n        <!-- <div class=\\\"panel-heading\\\">\\n            Status\\n        </div>\\n        <div class=\\\"panel-body\\\">\\n            body\\n        </div> -->\\n    \\n</div>\\n\\n\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'NgLanden';\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","//MODULE IMPORTS\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n//import {HttpModule} from '@angular/http';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { AppRoutingModule } from './/app-routing.module';\nimport { AgmCoreModule } from '@agm/core';     //Angular Google Maps\n\n//COMPONENT IMPORTS\nimport { AppComponent } from './app.component';\nimport { CountryDashboardComponent } from './country-dashboard/country-dashboard.component';\nimport { CountryDetailComponent } from './country-detail/country-detail.component';\nimport { CountryListComponent } from './country-list/country-list.component';\nimport { CountrySearchComponent } from './country-search/country-search.component';\n\n//SERVICE IMPORTS\nimport { ClockService } from './shared/services/clock.service';\nimport { FavoriteService } from './shared/services/favorite.service';\nimport { CountryService } from './shared/services/country.service';\nimport { RegionService } from './shared/services/region.service';\n\n@NgModule({\n  //Declarations om alle componenten in te declareren;\n  declarations: [\n    AppComponent,\n    CountryDashboardComponent,\n    CountryDetailComponent,\n    CountryListComponent,\n    CountrySearchComponent,\n  ],\n  //Import om alle modules in te laden Dependency Injection;\n  imports: [\n    BrowserModule, HttpClientModule, AppRoutingModule, AgmCoreModule.forRoot({\n      apiKey:'AIzaSyD23cc2r8zHIAISUvlWjp7_CDFQaX5X3IQ'\n    })\n  ],\n  providers: [CountryService,RegionService,ClockService,FavoriteService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","module.exports = \"a:hover, a:focus {\\r\\n  color: #2a6496;\\r\\n  text-decoration: none;\\r\\n}\\r\\n.square-service-block{\\r\\n    position:relative;\\r\\n    overflow:hidden;\\r\\n    margin:15px auto;\\r\\n    }\\r\\n.square-service-block a {\\r\\n  background-color: #e74c3c;\\r\\n  border-radius: 5px;\\r\\n  display: block;\\r\\n  padding: 60px 20px;\\r\\n  text-align: center;\\r\\n  width: 100%;\\r\\n}\\r\\n.square-service-block a:hover{\\r\\n  background-color: rgba(231, 76, 60, 0.8);\\r\\n  border-radius: 5px;\\r\\n}\\r\\n.ssb-icon {\\r\\n  color: #fff;\\r\\n  display: inline-block;\\r\\n  font-size: 28px;\\r\\n  margin: 0 0 20px;\\r\\n}\\r\\nh2.ssb-title {\\r\\n  color: #fff;\\r\\n  font-size: 20px;\\r\\n  font-weight: 200;\\r\\n  margin:0;\\r\\n  padding:0;\\r\\n  text-transform: uppercase;\\r\\n}\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/country-dashboard/country-dashboard.component.css\n// module id = ./src/app/country-dashboard/country-dashboard.component.css\n// module chunks = main","module.exports = \"\\n<div class = \\\"panel panel-primary\\\">\\n  <div class=\\\"panel-heading\\\">\\n      <table>\\n          <tr>\\n              <td><h3>Landen zoeker:</h3></td>\\n          </tr>\\n        </table>\\n  </div>\\n  <div class=\\\"panel-body\\\">\\n      <app-country-search></app-country-search> \\n  </div> \\n</div>\\n<div class = \\\"panel panel-primary\\\">\\n    <div class=\\\"panel-heading\\\">\\n    <table>\\n        <tr>\\n            <td> <h3>Werelddeel kiezer:</h3> </td>\\n        </tr>\\n    </table>\\n</div>\\n<!-- ------------------------------------------------------------------------------------------------------------------- -->\\n<div class=\\\"container\\\" >\\n    <div class=\\\"row\\\" >\\n        <div class=\\\"col-md-4\\\" *ngFor=\\\"let region of regions | slice:0:3\\\">\\n          <div class=\\\"square-service-block\\\">\\n              <a routerLink=\\\"/list/{{region.id}}\\\">\\n                <div class=\\\"ssb-icon\\\">\\n                  <img src=\\\"../assets/img/{{region.icon}}\\\" width=\\\"60%\\\">\\n                </div>\\n                <h2 class=\\\"ssb-title\\\">{{region.nameNL}}</h2>  \\n              </a>\\n          </div>\\n      </div>  \\n    </div>\\n    <div class=\\\"row\\\">  \\n      <div class=\\\"col-md-4\\\" *ngFor=\\\"let region of regions | slice:3\\\">\\n          <div class=\\\"square-service-block\\\">\\n              <a routerLink=\\\"/list/{{region.id}}\\\">\\n                <div class=\\\"ssb-icon\\\"><img src=\\\"../assets/img/{{region.icon}}\\\" width=\\\"60%\\\"></div>\\n                <h2 class=\\\"ssb-title\\\">{{region.nameNL}}</h2>  \\n              </a>\\n          </div>\\n        </div>\\n      </div>      \\n  </div>\\n</div> \\n<!-- ------------------------------------------------------------------------------------------------------------------- -->\\n<div *ngIf='favorites.length > 0' class = \\\"panel panel-primary\\\">\\n  <div class=\\\"panel-heading\\\">\\n      <table><tr>\\n          <td> <h3>Favoriete landen:</h3> </td>\\n          <!-- <td> <div style=\\\"width:30px\\\"> &nbsp;</div></td>\\n          <td> <div *ngIf=\\\"country\\\"><h2>{{country.name | uppercase }} </h2></div></td> -->\\n      </tr></table>\\n  </div>\\n  <div class=\\\"panel-body\\\">\\n      <ul>\\n        <li *ngFor='let fav of favorites'>{{fav}}</li>\\n      </ul>\\n  </div> \\n</div>\\n\\n\\n\\n\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/country-dashboard/country-dashboard.component.html\n// module id = ./src/app/country-dashboard/country-dashboard.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\nimport { Region} from '../shared/model/region.model';\n\nimport { RegionService } from '../shared/services/region.service';\nimport { FavoriteService } from '../shared/services/favorite.service';\n\n@Component({\n  selector: 'app-country-dashboard',\n  templateUrl: './country-dashboard.component.html',\n  styleUrls: ['./country-dashboard.component.css']\n})\n\nexport class CountryDashboardComponent implements OnInit {\n\n  regions: Region[];\n  favorites: String[] = [];\n  \n  constructor(private regionService: RegionService,\n              private favoriteService: FavoriteService) { }\n\n  ngOnInit() {\n    console.log('country-dashboard.comp: ngOnInit()')\n    \n    this.regionService.getRegions().subscribe(regionData => {\n\t\t\t\t\tthis.regions = regionData;                                               // 1. success handler\n\t\t\t\t},\n\t\t\t\terr => console.log(err),\t\t\t\t\t\t                                       // 2. error handler\n\t\t\t\t()=> console.log('Getting regions complete...')\t                           // 3. complete handler\n      );\n      \n      this.favoriteService.favorites.subscribe(f=>                                 // 1. success handler\n          this.setToFavorites(f),\n          err=>console.log(err),\t\t\t\t\t\t                                       // 2. error handler\n          ()=> console.log('Set favorite complete...')                             // 3. complete handler\n        );\n  }\n\n  setToFavorites(favorite: string): void\n  {\n    console.log('country-dashboard.comp: setToFavorites():', favorite);\n    this.favorites.push(favorite);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/country-dashboard/country-dashboard.component.ts","module.exports = \"agm-map{\\r\\n    height: 450px; \\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/country-detail/country-detail.component.css\n// module id = ./src/app/country-detail/country-detail.component.css\n// module chunks = main","module.exports = \"  <button class=\\\"btn btn-primary btn-lg\\\" *ngIf='showBack' (click)=\\\"goBack()\\\">terug</button>\\n<br *ngIf='showBack' /><br *ngIf='showBack' /> \\n<div class = \\\"panel panel-primary\\\">\\n    <div class=\\\"panel-heading\\\">\\n        <table border=\\\"0\\\"><tr>\\n            <td style=\\\"min-width:120px;\\\"> <h3>Land&nbsp;details:</h3> </td>\\n            <td style=\\\"width:94%;text-align:center;\\\"> <div *ngIf=\\\"country\\\"><h2> {{country.nameNL | uppercase }} </h2></div></td>\\n            <td style=\\\"min-width:10px;text-align:center;\\\" > \\n                 <div [hidden]=\\\"!isFavorite\\\"><h3>Favoriet!</h3></div>   \\n            </td>\\n            <td style=\\\"width:6%;text-align:center;\\\">&nbsp;</td>\\n            <td style=\\\"min-width:160px;text-align:right;\\\" >    \\n                <div *ngIf=\\\"country\\\" >\\n                    <button (click)=\\\"rate(1)\\\" class=\\\"btn btn-lg btn-success\\\">+1</button>&nbsp;\\n                    <button (click)=\\\"rate(-1)\\\" class=\\\"btn btn-lg btn-danger\\\">-1</button>&nbsp;\\n                    <button (click)=\\\"favorite()\\\" class=\\\"btn btn-lg btn-default\\\">favorite</button>\\n                </div>\\n            </td>\\n        </tr></table>\\n    </div>\\n    <div class=\\\"panel-body\\\">        \\n        <div *ngIf=\\\"country\\\"> \\n            <table border=\\\"0\\\" style=\\\"width:100%;\\\"> \\n                <tr>\\n                    <td style=\\\"width:60%;min-width:300px;\\\">\\n                         <table class=\\\"table table-bordered\\\" style=\\\"font-size: large;font-weight:bold\\\">\\n                            <tr><td style=\\\"width:170px;\\\">Land:</td><td>{{country.name}}</td></tr>\\n                            <tr><td>Hoofdstad:</td><td>{{country.capital}}</td></tr>\\n                            <tr><td>Aantal inwoners:</td><td>{{country.population}}</td></tr>\\n                            <tr><td>Tijd ({{country.timeZone}}):</td><td> {{time | date:'HH:mm:ss'}}</td></tr>\\n                            <!--<tr><td>fulljson:</td><td><div [innerHTML]=\\\"country.rawJson | json\\\"></div></td></tr> -->\\n                        </table> \\n                    </td>\\n                    <td style=\\\"width:10%\\\">&nbsp;</td>\\n                    <td style=\\\"width:30%;min-width:120px;max-width:220px; text-align:right;vertical-align:top;\\\">\\n                        <div style=\\\"border:1px solid black;\\\"><img src='{{country.flag}}' width=\\\"100%\\\" /></div> \\n                    </td>       \\n                </tr>\\n            </table>     \\n        </div>\\n    </div> \\n    <div class=\\\"panel-body\\\">\\n        <div style=\\\"border: 1px solid gray;\\\"> \\n            <agm-map [zoom]=\\\"3\\\" [latitude]=\\\"country.lat\\\" [longitude]=\\\"country.lng\\\" *ngIf='country'>\\n                <agm-marker [latitude]=\\\"country.lat\\\" [longitude]=\\\"country.lng\\\"> </agm-marker>\\n            </agm-map>\\n        </div>  \\n    </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/country-detail/country-detail.component.html\n// module id = ./src/app/country-detail/country-detail.component.html\n// module chunks = main","import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\nimport { Country } from '../shared/model/country.model';\nimport { CountryService } from '../shared/services/country.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { Location} from '@angular/common';\nimport { ClockService } from '../shared/services/clock.service';\nimport { DatePipe} from '@angular/common';\nimport { FavoriteService } from '../shared/services/favorite.service';\nimport { ISubscription } from 'rxjs/Subscription';\n\n@Component({\n  selector: 'app-country-detail',\n  templateUrl: './country-detail.component.html',\n  styleUrls: ['./country-detail.component.css']\n})\nexport class CountryDetailComponent implements OnInit {\n  \n  clockServiceSubscription: ISubscription;\n  hourOffset: number = 0;\n  showBack: boolean = false;\n  transNL : string;\n  time: Date;\n  staticDateTime: Date = new Date();\n\n  @Input()\n  country : Country //= new Country('test1','test2','test3');\n\n  @Output()\n  rating: EventEmitter<number> = new EventEmitter<number>();\n\n  @Output()\n  fav: EventEmitter<string> =new EventEmitter<string>(); \n\n  isFavorite: boolean = false;\n\n  constructor(\n    private countryService : CountryService,\n    private route: ActivatedRoute,\n    private location: Location,\n    private clockService: ClockService,\n    private favoriteService: FavoriteService\n  ) { }\n\n  ngOnInit() {\n    console.log('country-detail.comp: ngOnInit()')\n    this.getCountry();\n    this.getTime();\n  }\n\n  ngOnChanges(change) {\n    console.log('country-detail.comp: ngOnChanges(change): ', change);\n    if (this.country) {\n      this.calcHourOffset();\n      this.isFavorite = this.country.favorite;\n\t\t}\n\t}\n\n  ngOnDestroy() {\n    console.log('country-detail.comp: ngOnDestroy()');    \n    this.clockServiceSubscription.unsubscribe();\n  }\n\n  getCountry(){\n    console.log('country-detail.comp: getCountry()');    \n    var name = this.route.snapshot.paramMap.get('name');\n    if(!name)\n    {\n      this.showBack = false;  \n      name = this.country.name;\n    }\n    else\n    {\n      this.showBack = true;\n    }\n    \n    this.countryService.getCountry(name).subscribe(x=>{\n      this.country = x;             \n      this.calcHourOffset(); },                           // 1. success handler\n      err=>console.log(err),\t\t\t\t\t\t                  // 2. error handler\n      ()=> console.log('Get country complete...') );      // 3. complete handler\n  }\n  \n  calcHourOffset()\n  {\n    console.log('country-detail.comp: calcHourOffset()')\n    //calculate new UTC hour      \n    var timeHour = (new Date()).getHours();  \n    var houre : number =  +this.country.timeZone.slice(3,6);\n    this.hourOffset = timeHour-2 + houre;\n  }\n\n  getTime()\n  {\n    console.log('country-detail.comp: getTime()')\n    //calculate new UTC houre      \n    \n    this.clockServiceSubscription = this.clockService.getClock().subscribe(t =>\n    {\n      //console.log('time changed');\n      t.setUTCHours(this.hourOffset);\n      this.time =t; \n    });   \n  }\n\n  \n  goBack() :void{\n    console.log('country-detail.comp: goBack()')\n    this.location.back();\n  }\n\n  rate(num: number): void \n  {\n    console.log('country-detail.comp: rate()', this.country.name, ': ', num );\n    this.rating.emit(num);\n  }\n  \n  favorite() {\n\t\tconsole.log('country-detail.comp:favorite()', this.country.name );\n    this.isFavorite = !this.isFavorite;\n    //this.fav.emit(this.isFavorite);\n    console.log('set favorite country:', this.country.name);\n    this.favoriteService.favorites.next(this.country.name);    \n\t}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/country-detail/country-detail.component.ts","module.exports = \".myHeight-small{\\r\\n    font-size:large; \\r\\n    overflow-y:auto; \\r\\n    height:18vh;\\r\\n}\\r\\n\\r\\n.myHeight-large{\\r\\n    font-size:large; \\r\\n    overflow-y:auto; \\r\\n    height:55vh;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/country-list/country-list.component.css\n// module id = ./src/app/country-list/country-list.component.css\n// module chunks = main","module.exports = \"<button class=\\\"btn btn-primary btn-lg\\\" (click)=\\\"goBack()\\\">terug</button>\\n<br/><br/>\\n\\n<div class = \\\"panel panel-primary\\\">\\n  <div class=\\\"panel-heading\\\">\\n      <table><tr>\\n          <td style=\\\"min-width:120px;\\\"> <h3>Landen van:</h3> </td>\\n          <td style=\\\"width:94%;text-align:center;\\\"> <div *ngIf=\\\"region\\\"><h2>{{region.nameNL | uppercase }} </h2></div></td>\\n          <td style=\\\"min-width:10px;text-align:center;\\\">&nbsp;</td>\\n          <td style=\\\"width:6%;text-align:center;\\\">&nbsp;</td>\\n          <td style=\\\"min-width:160px;text-align:right;\\\" >&nbsp; </td>\\n      </tr></table>\\n  </div>\\n  <div class=\\\"panel-body\\\">\\n    <!-- <div *ngIf=\\\"region\\\" style=\\\"font-size:large; overflow-y:auto; height:25vh\\\"> -->\\n        <div *ngIf=\\\"region\\\" [ngClass]=\\\"myHeight\\\" >\\n      <ul class=\\\"list-group\\\" >\\n        <li class=\\\"list-group-item\\\"  *ngFor='let country of countries' (click)='setSelected(country)'>\\n          <!-- <a routerLink=\\\"/detail/{{country.name}}\\\">{{country.name}}</a>   -->\\n          <table border=\\\"0\\\" style=\\\"padding-top:0px; margin-top:0px;top:0px;\\\">\\n            <tr>\\n                <td style=\\\"min-width:35px;\\\">&nbsp;<span class=\\\"badge badge-dark\\\">{{country.rating}}</span></td>                \\n                <td style=\\\"width:88%;\\\">&nbsp;{{country.name}}</td>     \\n                <td style=\\\"min-width:80px; font-weight: bold;\\\">&nbsp;<span *ngIf='country.favorite'>favoriet!</span></td>   \\n                <td style=\\\"width:12%;\\\">&nbsp;</td>                              \\n            </tr>\\n          </table>\\n        </li>\\n      </ul>\\n    </div>\\n  </div>\\n</div>\\n<app-country-detail *ngIf='selectedCountry'  [country]='selectedCountry' (rating)=\\\"updateRating($event)\\\" ></app-country-detail>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/country-list/country-list.component.html\n// module id = ./src/app/country-list/country-list.component.html\n// module chunks = main","import { Component, OnInit, Input } from '@angular/core';\nimport { Country } from '../shared/model/country.model';\nimport { CountryService } from '../shared/services/country.service';\nimport { Region } from '../shared/model/region.model';\nimport { RegionService } from '../shared/services/region.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { Location} from '@angular/common';\nimport { FavoriteService } from '../shared/services/favorite.service';\n\n\n@Component({\n  selector: 'app-country-list',\n  templateUrl: './country-list.component.html',\n  styleUrls: ['./country-list.component.css']\n})\nexport class CountryListComponent implements OnInit {\n\n  selectedCountry: Country;\n  myHeight: string = \"myHeight-large\";\n  \n  @Input()   region : Region;\n  countries: Country[]\n  doFilter: Boolean;\n\n  constructor(\n    private countryService : CountryService,\n    private regionService: RegionService,\n    private route: ActivatedRoute,\n    private location: Location,\n    private favoriteService: FavoriteService\n  ) { }\n\n  ngOnInit() {\n    console.log('country-list.comp: ngOnInit()')\n    this.getRegion();\n    this.favoriteService.favorites.subscribe(f=> this.setFavorite(f));\n  }\n\n  setFavorite(name: string){\n      console.log('Country-List.comp: set favorite(): ',name )\n      this.countries.forEach(c =>{ \n          if(c.name === name){ \n            console.log('Country-List.comp: country found');\n            c.favorite = true;\n        }\n      });\n  }\n  \n \n  setSelected(country: Country)\n  {\n    console.log('country-list.comp: setSelected()')\n    this.selectedCountry =country;\n    this.myHeight = \"myHeight-small\";\n  }\n\n  getRegion()\n  {\n    console.log('country-list.comp: getRegion()')\n    const id = +this.route.snapshot.paramMap.get('id');\n    console.log('region.id = '+id);\n    //var regions : Region[];\n    this.doFilter = true;\n    if(id === 1)\n    {\n      console.log('id is 1');\n      this.doFilter = false;      \n    }\n   \n          this.regionService.getRegion(id).subscribe(x=> {this.region = x;\n            this.getCountries();                       // 1. success handler\n          }, err=> console.log(err),                   // 2. error handler\n          ()=>console.log('Getting the region'));      // 3. complete handler\n   \n  }\n\n  goBack() :void{\n    console.log('country-list.comp: goBack()')\n    this.location.back();\n  } \n\n  getCountries()\n  {\n    console.log('country-list.comp: getCountries()')\n    this.countryService.getAllCountries().subscribe(x=> {\n      this.countries = x;\n      if(this.doFilter)\n      {\n          console.log('filter countries');\n          this.countries = this.countries.filter(c=>c.region === this.region.name);\n      }\n    },                                                        // 1. success handler\n    err=>console.log(err),\t\t\t\t\t\t                        // 2. error handler\n    ()=> console.log('get countries complete...')             // 3. complete handler\n  );\n  }\n\n  updateRating(rating: number): void {\n    console.log('country-list.comp: updateRating()')\n    this.selectedCountry.rating += rating;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/country-list/country-list.component.ts","module.exports = \".rick-input{\\r\\n    width: 420px; \\r\\n    font-size: x-large;\\r\\n}\\r\\n.rick-block{\\r\\n    padding-left:10px;\\r\\n    width: 420px;\\r\\n    font-size: x-large;\\r\\n    font-style: bold;\\r\\n    background-color: rgb(234, 236, 239);  \\r\\n    /* background-color: rgb(105, 169, 241)  */\\r\\n}\\r\\n.rick-block:hover{\\r\\n    background-color:rgb(221, 78, 65); \\r\\n}\\r\\na{\\r\\n    color: rgb(10, 10, 10);\\r\\n}\\r\\na:hover{\\r\\n    color: white;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/country-search/country-search.component.css\n// module id = ./src/app/country-search/country-search.component.css\n// module chunks = main","module.exports = \"<div id=\\\"search-component\\\" style=\\\"text-align: center; display:inline-block;\\\" >\\n    <div style=\\\"display:inline-block\\\">\\n    <table border=\\\"0\\\">\\n    <tr>\\n      <td style=\\\"width:40%\\\">&nbsp;</td>\\n      <td style=\\\"min-width:60px\\\"><h3>Zoek:</h3></td>\\n       <td style=\\\"min-width:100px\\\"><input class=\\\"rick-input\\\" #searchBox id=\\\"search-box\\\" (keyup)=\\\"search(searchBox.value)\\\" width=\\\"80%\\\" /></td>\\n      <td style=\\\"width:60%\\\">&nbsp;</td> \\n    </tr>\\n    <tr>\\n      <td>&nbsp;</td>\\n      <td>&nbsp;</td>\\n      <td>\\n          <div class=\\\"rick-block\\\" *ngFor=\\\"let country of countries$ | async | slice:0:5\\\">\\n             <a routerLink=\\\"/detail/{{country.name}}\\\">\\n                <div style=\\\"text-align: left;\\\"> \\n                  {{country.name}}   {{country.nameNL}}         \\n  \\n                </div>         \\n             </a>          \\n          </div>\\n      </td>\\n      <td>&nbsp;</td>\\n    </tr>\\n    </table>\\n  </div>\\n  </div>      \\n\\n\\n<!-- <div id=\\\"search-component\\\" style=\\\"text-align: center; display:inline-block; width:100vh\\\" >\\n  <div style=\\\"display:inline-block\\\">\\n  <table border=\\\"1\\\">\\n  <tr>\\n    <td><h3>Zoek:</h3> </td>\\n    <td><span>&nbsp;&nbsp;&nbsp;</span></td>\\n    <td><input class=\\\"rick-input\\\" #searchBox id=\\\"search-box\\\" (keyup)=\\\"search(searchBox.value)\\\" width=\\\"100%\\\" /></td>\\n  </tr>\\n  <tr>\\n    <td><span>&nbsp;&nbsp;&nbsp;</span></td>\\n    <td><span>&nbsp;&nbsp;&nbsp;</span></td>\\n    <td>\\n        <div class=\\\"rick-block\\\" *ngFor=\\\"let country of countries$ | async | slice:0:5\\\">\\n           <a routerLink=\\\"/detail/{{country.name}}\\\">\\n              <div style=\\\"text-align: left;\\\"> \\n                {{country.name}}   {{country.nameNL}}         \\n\\n              </div>         \\n           </a>          \\n        </div>\\n    </td>\\n  </tr>\\n  </table>\\n</div>\\n</div>       -->\\n  <!-- <div *ngIf=\\\"countries$?.length < 20\\\">\\n    <p>hallo</p>\\n  </div> -->\\n  <!-- <ul class=\\\"search-result\\\"> -->\\n\\n\\n \\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/country-search/country-search.component.html\n// module id = ./src/app/country-search/country-search.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Observable} from 'rxjs/Observable';\nimport { Subject  } from 'rxjs/Subject';\nimport { of} from 'rxjs/observable/of';\n\nimport { debounceTime, distinctUntilChanged, switchMap} from 'rxjs/operators';\n\nimport { Country} from '../shared/model/country.model'\nimport { CountryService} from '../shared/services/country.service'\n\n\n@Component({\n  selector: 'app-country-search',\n  templateUrl: './country-search.component.html',\n  styleUrls: ['./country-search.component.css']\n})\nexport class CountrySearchComponent implements OnInit {\n\n  countries$: Observable<Country[]>;     //Observable property convention ends with a $-sign.  \n\n  private searchTerms = new Subject<string>();\n\n  constructor(private countryService : CountryService) { }\n\n  ngOnInit() {\n    console.log('country-search.comp: ngOnInit()')\n    this.countries$ = this.searchTerms.pipe(\n      debounceTime(500),                // wait 500 ms  \n      distinctUntilChanged(),           // request only when term has changed\n      switchMap((term:string)=>this.countryService.searchCountry(term))  //start country service search when term is adjusted by the user\n    )\n  }\n\n  search(term: string)\n  {\n    console.log('country-search.comp: search() : ',term);\n    this.searchTerms.next(term);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/country-search/country-search.component.ts","export class Country {        \r\n    public favorite: boolean = false;\r\n    public rating : number = 0;\r\n    \r\n    constructor(public name: string,\r\n                public capital: string,\r\n                public region: string,\r\n                public flag: string,\r\n                public population: string,\r\n                public nameNL:string,\r\n                public timeZone: string,\r\n                public lat: number,\r\n                public lng: number,\r\n                public rawJson: string ){\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/model/country.model.ts","export class Region {\r\n    constructor(public id: number,\r\n                public name: string,\r\n                public nameNL: string,\r\n                public rating: number) {\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/model/region.model.ts","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class ClockService {\n\n  private clock: Observable<Date>;\n\n  constructor() { \n     \n  }\n\n  //HORRIBLE WRONG CODE!\n  // getClock(hours: number): Observable<Date>\n  // {\n  //   this.clock = Observable.interval(1000).map(tick=> {\n  //      var d : Date = new Date();\n  //      d.setUTCHours(hours);\n  //      return d;\n  //     }\n  //     ).share();\n  //    // ((new Date()).setHours((new Date()).getHours() + hours))).share();\n  //   return this.clock ;\n  // }\n\n\n  getClock(): Observable<Date>\n  {\n    this.clock = Observable.interval(1000).map(tick=> new Date()).share();        \n    return this.clock ;\n  }\n  \n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/services/clock.service.ts","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { of } from 'rxjs/observable/of';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { catchError, map, tap} from 'rxjs/operators';\nimport { Country } from '../model/country.model';\n\n\nimport 'rxjs/add/operator/map'\n\n@Injectable()\nexport class CountryService {\n\n  private baseApiUrl = \"https://restcountries.eu/rest/v2\"; \n\n  constructor(\n    private http: HttpClient\n  )  { }\n\n  getAllCountries():Observable<Country[]>\n  {\n     return this.http.get<Country[]>(this.baseApiUrl+'/all').map(res => this.myMap(res))    \n  }\n \n  searchCountry(term: string): Observable<Country[]> {\n    if (!term) {\n      // if not search term, return empty hero array.\n      return of([]);\n    }\n    term = term.trim();\n    return this.http.get<Country[]>(this.baseApiUrl+'/name/'+term+'?fields=name').pipe(\n      tap(_=>this.log('found countries matching '+term)),\n      catchError(this.handleError<Country[]>('searchCountry',[])),\n      map(res => this.myMap(res))\n      ); \n  }\n  \n  getCountry(name:string): Observable<Country>\n  {\n    const url = this.baseApiUrl+'/name/'+name+'?fullText=true';\n    console.log(url);\n    return this.http.get<Country>(url).map(res=>this.myMapCounty(res));\n  }\n\n  myMapCounty(input: any) : Country\n  {\n      var countries : Country[] = []\n\n      input.forEach(element=>{countries.push(new Country(element.name,\n                                                        element.capital,\n                                                        element.region,\n                                                        element.flag,\n                                                        Number(element.population).toLocaleString('nl-NL'),\n                                                        element ? element.translations[\"nl\"] : '', \n                                                        element.timezones ? element.timezones[0] : '',                                                                                                             \n                                                        element.latlng ? element.latlng[0] : 52.14180,\n                                                        element.latlng ? element.latlng[1] : 6.50276,\n                                                        element ));\n                                                      }\n                                                      );\n      return countries[0];\n  }\n\n  myMap(input : any[]) : Country[]\n  {\n      var countries : Country[] = []\n      input.forEach(element=>{countries.push( \n        new Country( \n         element.name,\n         element.capital,\n         element.region,\n         element.flag, \n         Number(element.population).toLocaleString('nl-NL'),\n         element.translations ? element.translations[\"nl\"] : '',     \n         element.timezones ? element.timezones[0] : '',\n         element.latlng ? element.latlng[0] : 52.14180,\n         element.latlng ? element.latlng[1] : 6.50276,\n         element.capital ? element.capital : '' ));\n        }\n        );\n      return countries;\n  }\n\n  private handleError<T> (operation = 'operation', result?:T )\n  {\n    return (error: any):Observable<T> => {\n      console.error(error);\n      this.log('${operation} failed: ${error.message}');\n      return of(result as T);\n    }\n  }\n\n  private log(message: string) : void {\n    console.log(message);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/services/country.service.ts","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\n\n\n@Injectable()\nexport class FavoriteService {\n  \n  favorites: Subject<string>;\n  \n  constructor() { \n    this.favorites = new Subject<string>();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/services/favorite.service.ts","import { Injectable} from '@angular/core';\r\n//import {Http} from '@angular/http';\r\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Region } from '../model/region.model';\r\n\r\nimport \"rxjs/Rx\";\r\n\r\nimport 'rxjs/add/operator/map'\r\nimport 'rxjs/add/operator/filter'\r\nimport 'rxjs/add/operator/find'\r\n\r\n@Injectable()\r\nexport class RegionService {\r\n\r\n\tconstructor(private http:HttpClient) {\r\n\r\n\t}\r\n\r\n\t// retourneer alle regions\r\n\tgetRegions(): Observable<Region[]> {\r\n\t\treturn this.http.get<Region[]>('../assets/data/regions.json');\r\n    }\r\n    \r\n   // retourneer alle regions\r\n\tgetRegion(id : number): Observable<Region> {\r\n\t\treturn this.http.get<Region[]>('../assets/data/regions.json').map(rs => { return rs.find(r=>r.id === id)});\r\n\t\t// return this.http.get<Region[]>('../assets/data/regions.json').map((regions: Region[]) => {\r\n\t\t// \treturn regions.find(r=>r.name === 'World')});\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/services/region.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":"webpack:///"}